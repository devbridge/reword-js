# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.13.0

tag_matcher: &tag_matcher
  tags:
    only: /^v.*/
  branches:
    ignore: /.*/

version: 2
jobs:
  test:
    <<: *defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: 'Install dependencies'
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: 'Lint project'
          command: npm run lint -- --format junit -o reports/eslint/results.xml

      - run:
          name: 'Run tests'
          environment:
            JEST_JUNIT_OUTPUT: reports/jest/results.xml
          command: npm run test:all -- --runInBand --ci --reporters=default --reporters=jest-junit

      - store_test_results:
          path: reports/

      - store_artifacts:
          path: reports/

      - persist_to_workspace:
          root: ~/repo
          paths: .

  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run: npm run build

      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Release/Publish to github and npm
          command: npm run publish

workflows:
  version: 2
  test-build:
    jobs:
      - test
      - build:
          requires:
            - test

  test-build-and-publish:
    jobs:
      - test:
          filters:
            <<: *tag_matcher
      - build:
          requires:
            - test
          filters:
            <<: *tag_matcher
      # - approve-deployment:
      #     type: approval
      #     requires:
      #       - build
      #     filters:
      #       <<: *tag_matcher
      - deploy:
          requires:
            - build
          filters:
            <<: *tag_matcher
